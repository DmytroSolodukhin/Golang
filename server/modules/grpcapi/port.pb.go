// Code generated by protoc-gen-go. DO NOT EDIT.
// source: port.proto

package port

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Port struct {
	PortId               string    `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	City                 string    `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country              string    `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Alias                []string  `protobuf:"bytes,5,rep,name=alias,proto3" json:"alias,omitempty"`
	Regions              []string  `protobuf:"bytes,6,rep,name=regions,proto3" json:"regions,omitempty"`
	Coordinates          []float64 `protobuf:"fixed64,7,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
	Province             string    `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`
	Timezone             string    `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Unlocs               []string  `protobuf:"bytes,10,rep,name=unlocs,proto3" json:"unlocs,omitempty"`
	Code                 string    `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{0}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPortId() string {
	if m != nil {
		return m.PortId
	}
	return ""
}

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Port) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Port) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Port) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *Port) GetCoordinates() []float64 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Port) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Port) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Port) GetUnlocs() []string {
	if m != nil {
		return m.Unlocs
	}
	return nil
}

func (m *Port) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type Response struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	Port                 *Port    `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Ports                []*Port  `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *Response) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Response) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

type Request struct {
	PortId               string   `protobuf:"bytes,2,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	Port                 *Port    `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPortId() string {
	if m != nil {
		return m.PortId
	}
	return ""
}

func (m *Request) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func init() {
	proto.RegisterType((*Port)(nil), "port.Port")
	proto.RegisterType((*Response)(nil), "port.Response")
	proto.RegisterType((*Request)(nil), "port.Request")
}

func init() { proto.RegisterFile("port.proto", fileDescriptor_729c3d36e9010a8e) }

var fileDescriptor_729c3d36e9010a8e = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0x69, 0xd2, 0x24, 0x9d, 0xf0, 0xf7, 0xb0, 0x88, 0x2e, 0x3d, 0x48, 0xc8, 0x41,
	0xeb, 0xa5, 0x87, 0xfa, 0x04, 0x8a, 0x50, 0xbc, 0x49, 0x7c, 0x00, 0x8d, 0xc9, 0x20, 0x0b, 0xe9,
	0x4e, 0xdc, 0xdd, 0x16, 0xea, 0x8b, 0xf8, 0x22, 0x3e, 0xa0, 0xec, 0xa4, 0x11, 0x2b, 0x42, 0x3d,
	0xed, 0xfc, 0xbe, 0xf9, 0x98, 0x61, 0x3e, 0x16, 0xa0, 0x23, 0xe3, 0xe6, 0x9d, 0x21, 0x47, 0x22,
	0xf2, 0x75, 0xf1, 0x3e, 0x82, 0xe8, 0x9e, 0x8c, 0x13, 0xa7, 0x90, 0x78, 0xe1, 0x51, 0x35, 0x32,
	0xc8, 0x83, 0xd9, 0xa4, 0x8c, 0x3d, 0xde, 0x35, 0x42, 0x40, 0xa4, 0xab, 0x15, 0xca, 0x11, 0xab,
	0x5c, 0x7b, 0xad, 0x56, 0x6e, 0x2b, 0xc3, 0x5e, 0xf3, 0xb5, 0x90, 0x90, 0xd4, 0xb4, 0xd6, 0xce,
	0x6c, 0x65, 0xc4, 0xf2, 0x80, 0xe2, 0x18, 0xc6, 0x55, 0xab, 0x2a, 0x2b, 0xc7, 0x79, 0x38, 0x9b,
	0x94, 0x3d, 0x78, 0xbf, 0xc1, 0x17, 0x45, 0xda, 0xca, 0x98, 0xf5, 0x01, 0x45, 0x0e, 0x59, 0x4d,
	0x64, 0x1a, 0xa5, 0x2b, 0x87, 0x56, 0x26, 0x79, 0x38, 0x0b, 0xca, 0xef, 0x92, 0x98, 0x42, 0xda,
	0x19, 0xda, 0x28, 0x5d, 0xa3, 0x4c, 0x79, 0xd9, 0x17, 0xfb, 0x9e, 0x53, 0x2b, 0x7c, 0x23, 0x8d,
	0x72, 0xd2, 0xf7, 0x06, 0x16, 0x27, 0x10, 0xaf, 0x75, 0x4b, 0xb5, 0x95, 0xc0, 0x2b, 0x77, 0xc4,
	0xf7, 0x50, 0x83, 0x32, 0xdb, 0xdd, 0x43, 0x0d, 0x16, 0x4f, 0x90, 0x96, 0x68, 0x3b, 0xd2, 0x96,
	0xef, 0x6d, 0xfc, 0x3c, 0x9f, 0x4c, 0x5a, 0x72, 0x2d, 0xce, 0x80, 0x13, 0xe4, 0x5c, 0xb2, 0x05,
	0xcc, 0x39, 0x5a, 0x1f, 0x65, 0xc9, 0xba, 0xc8, 0x61, 0xec, 0x5f, 0x2b, 0xc3, 0x3c, 0xfc, 0x61,
	0xe8, 0x1b, 0xc5, 0x0d, 0x24, 0x25, 0xbe, 0xae, 0xd1, 0xee, 0xa5, 0x3f, 0xda, 0x4b, 0x7f, 0xd8,
	0x12, 0xfe, 0xbe, 0x65, 0xf1, 0x11, 0x40, 0xe6, 0xf1, 0x01, 0xcd, 0x46, 0xd5, 0x28, 0xce, 0x21,
	0x5c, 0xa2, 0x13, 0xff, 0x7b, 0xe3, 0x6e, 0xfc, 0xf4, 0x68, 0xc0, 0xfe, 0x9e, 0xe2, 0x9f, 0xb8,
	0x84, 0x78, 0x89, 0xee, 0xba, 0x6d, 0x0f, 0x5b, 0x2f, 0xfc, 0x0f, 0xb1, 0x7f, 0x9b, 0x79, 0x8b,
	0x2d, 0x3a, 0x3c, 0x68, 0x7d, 0x8e, 0xf9, 0x0f, 0x5e, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc6,
	0x2b, 0x6e, 0x3a, 0x91, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortServiceClient is the client API for PortService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortServiceClient interface {
	Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	GetAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Post(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type portServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortServiceClient(cc *grpc.ClientConn) PortServiceClient {
	return &portServiceClient{cc}
}

func (c *portServiceClient) Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/port.PortService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portServiceClient) GetAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/port.PortService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portServiceClient) Post(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/port.PortService/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portServiceClient) Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/port.PortService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortServiceServer is the server API for PortService service.
type PortServiceServer interface {
	Get(context.Context, *Request) (*Response, error)
	GetAll(context.Context, *Request) (*Response, error)
	Post(context.Context, *Request) (*Response, error)
	Delete(context.Context, *Request) (*Response, error)
}

// UnimplementedPortServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPortServiceServer struct {
}

func (*UnimplementedPortServiceServer) Get(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPortServiceServer) GetAll(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedPortServiceServer) Post(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Post not implemented")
}
func (*UnimplementedPortServiceServer) Delete(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPortServiceServer(s *grpc.Server, srv PortServiceServer) {
	s.RegisterService(&_PortService_serviceDesc, srv)
}

func _PortService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortServiceServer).Get(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortServiceServer).GetAll(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortService_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortServiceServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortService/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortServiceServer).Post(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortServiceServer).Delete(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "port.PortService",
	HandlerType: (*PortServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _PortService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _PortService_GetAll_Handler,
		},
		{
			MethodName: "Post",
			Handler:    _PortService_Post_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PortService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "port.proto",
}